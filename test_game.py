import unittest
from main import get_winner

class TestGameLogic(unittest.TestCase):

    def test_draw(self):
        result = get_winner("rock", "rock")
        print("\nü™® –ü—Ä–æ–±–∞ –Ω—ñ—á–∏–π–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É")
        self.assertEqual(result, "–ù—ñ—á–∏—è!")

    def test_player1_wins(self):
        print("\nüî• –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–µ—Ä–µ–º–æ–≥ –≥—Ä–∞–≤—Ü—è 1")
        result = get_winner("rock", "scissors")
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        self.assertIn("–ì—Ä–∞–≤–µ—Ü—å 1 –ø–µ—Ä–µ–º–∞–≥–∞—î!", result)

        result = get_winner("paper", "rock")
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        self.assertIn("–ì—Ä–∞–≤–µ—Ü—å 1 –ø–µ—Ä–µ–º–∞–≥–∞—î!", result)

        result = get_winner("spock", "rock")
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        self.assertIn("–ì—Ä–∞–≤–µ—Ü—å 1 –ø–µ—Ä–µ–º–∞–≥–∞—î!", result)

    def test_player2_wins(self):
        print("\nüí• –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–µ—Ä–µ–º–æ–≥ –≥—Ä–∞–≤—Ü—è 2")
        result = get_winner("scissors", "rock")
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        self.assertIn("–ì—Ä–∞–≤–µ—Ü—å 2 –ø–µ—Ä–µ–º–∞–≥–∞—î!", result)

        result = get_winner("lizard", "scissors")
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        self.assertIn("–ì—Ä–∞–≤–µ—Ü—å 2 –ø–µ—Ä–µ–º–∞–≥–∞—î!", result)

        result = get_winner("rock", "spock")
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        self.assertIn("–ì—Ä–∞–≤–µ—Ü—å 2 –ø–µ—Ä–µ–º–∞–≥–∞—î!", result)

    def test_invalid_input(self):
        print("\n‚ùó –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è")
        result = get_winner("rock", "banana")
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        self.assertEqual(result, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ –≤–≤–µ–¥–µ–Ω–Ω—è. –ú–æ–∂–ª–∏–≤—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏: rock, paper, scissors, lizard, spock.")

if __name__ == '__main__':
    unittest.main(verbosity=2)
    